<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <GroupAction />
    <GroupActionAddRemove />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
        <calculation class='tableau' formula='&quot;week&quot;' />
        <members>
          <member value='&quot;day&quot;' />
          <member value='&quot;week&quot;' />
          <member value='&quot;month&quot;' />
        </members>
      </column>
      <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
      </column>
    </datasource>
    <datasource caption='Data (london_bikes_final)' inline='true' name='federated.1ld4rh1098g4km19tf0s10k0r00w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='london_bikes_final' name='excel-direct.13ukbqi18q2hoe18ey74q1kdbsce'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/priyadharshan/Desktop/LearnPy/Analytics/london_bikes_final.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.13ukbqi18q2hoe18ey74q1kdbsce' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
            <column datatype='real' name='temp_real_C' ordinal='3' />
            <column datatype='real' name='temp_feels_like_ C' ordinal='4' />
            <column datatype='real' name='humidity_percent' ordinal='5' />
            <column datatype='real' name='wind_speed_kph' ordinal='6' />
            <column datatype='string' name='weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='season' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K17415:no:A1:K17415:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp_real_C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp_real_C]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>temp_real_C</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp_feels_like_ C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp_feels_like_ C]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>temp_feels_like_ C</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humidity_percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[humidity_percent]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>humidity_percent</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_speed_kph</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wind_speed_kph]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>wind_speed_kph</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weather]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>weather</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_holiday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_holiday]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>is_holiday</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_weekend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_weekend]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>is_weekend</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>130</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Moving Average Rides' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([count]), -[Parameters].[Parameter 2]+1, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_3016778490836135937]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
      </column>
      <column caption='Min Month' datatype='date' name='[Calculation_3016778490836795397]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ MIN(IF [Moving Average Period Set] THEN [Calculation_3016778490836135937] END) }' />
      </column>
      <column caption='In Range' datatype='boolean' name='[Calculation_3016778490839232519]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_3016778490836135937] &gt;= [Calculation_3016778490836795397]&#10;AND&#10;[Calculation_3016778490836135937] &lt;= [Min Month (copy)_3016778490837069830]' />
      </column>
      <column caption='In Range Rides' datatype='integer' name='[Calculation_3016778490840244232]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ SUM(INT([Calculation_3016778490839232519]) * [count]) }' />
      </column>
      <column caption='Max Month' datatype='date' name='[Min Month (copy)_3016778490837069830]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ MAX(IF [Moving Average Period Set] THEN [Calculation_3016778490836135937] END) }' />
      </column>
      <column aggregation='None' caption='Wind (KPH)' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.57' />
      </column>
      <column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_921A8E3571EC4C5CBE12DBC79DD03794]' role='measure' type='quantitative' />
      <column caption='Count' datatype='integer' datatype-customized='true' name='[count]' role='measure' type='quantitative' />
      <column caption='Humidity Percent' datatype='real' name='[humidity_percent]' role='measure' type='quantitative' />
      <column caption='Is Holiday' datatype='integer' name='[is_holiday]' role='measure' type='quantitative' />
      <column caption='Is Weekend' datatype='integer' name='[is_weekend]' role='measure' type='quantitative' />
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Temp C' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.49' />
      </column>
      <column caption='temp feels like  C' datatype='real' name='[temp_feels_like_ C]' role='measure' type='quantitative' />
      <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
      <column caption='Time' datatype='datetime' datatype-customized='true' name='[time]' role='dimension' type='ordinal' />
      <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
      <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_3016778490839232519]' derivation='Attribute' name='[attr:Calculation_3016778490839232519:nk]' pivot='key' type='nominal' />
      <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_3016778490839232519]' derivation='None' name='[none:Calculation_3016778490839232519:nk]' pivot='key' type='nominal' />
      <column-instance column='[weather]' derivation='None' name='[none:weather:nk]' pivot='key' type='nominal' />
      <group caption='Moving Average Period Set' name='[Moving Average Period Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Calculation_3016778490836135937]' member='#2015-04-05#' />
          <groupfilter function='member' level='[Calculation_3016778490836135937]' member='#2015-04-12#' />
          <groupfilter function='member' level='[Calculation_3016778490836135937]' member='#2015-04-19#' />
          <groupfilter function='member' level='[Calculation_3016778490836135937]' member='#2015-04-26#' />
          <groupfilter function='member' level='[Calculation_3016778490836135937]' member='#2015-05-03#' />
          <groupfilter function='member' level='[Calculation_3016778490836135937]' member='#2015-05-10#' />
          <groupfilter function='member' level='[Calculation_3016778490836135937]' member='#2015-05-17#' />
          <groupfilter function='member' level='[Calculation_3016778490836135937]' member='#2015-05-24#' />
          <groupfilter function='member' level='[Calculation_3016778490836135937]' member='#2015-05-31#' />
          <groupfilter function='member' level='[Calculation_3016778490836135937]' member='#2015-06-07#' />
          <groupfilter function='member' level='[Calculation_3016778490836135937]' member='#2015-06-14#' />
          <groupfilter function='member' level='[Calculation_3016778490836135937]' member='#2015-06-21#' />
          <groupfilter function='member' level='[Calculation_3016778490836135937]' member='#2015-06-28#' />
          <groupfilter function='member' level='[Calculation_3016778490836135937]' member='#2015-07-05#' />
          <groupfilter function='member' level='[Calculation_3016778490836135937]' member='#2015-07-12#' />
          <groupfilter function='member' level='[Calculation_3016778490836135937]' member='#2015-07-19#' />
          <groupfilter function='member' level='[Calculation_3016778490836135937]' member='#2015-07-26#' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Min Month,Max Month,Wind (KPH),Temp C)' hidden='true' name='[Tooltip (Min Month,Max Month,Wind (KPH),Temp C)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_3016778490836795397]' />
          <groupfilter function='level-members' level='[Min Month (copy)_3016778490837069830]' />
          <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
          <groupfilter function='level-members' level='[temp real C (bin)]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Moving Average Period,Min Month,Max Month)' hidden='true' name='[Tooltip (Moving Average Period,Min Month,Max Month)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_3016778490836135937]' />
          <groupfilter function='level-members' level='[Calculation_3016778490836795397]' />
          <groupfilter function='level-members' level='[Min Month (copy)_3016778490837069830]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/tj/w88c8w6d2j5b4dj1bc2l7rhm0000gn/T/tableau-temp/#TableauTemp_1o2wjkp0synue41c2mrt001cd9gp.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/20/2025 09:09:05 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table'>
            <columns>
              <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' />
            </columns>
          </relation>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17414</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time</remote-name>
              <remote-type>7</remote-type>
              <local-name>[time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time</remote-alias>
              <ordinal>1</ordinal>
              <family>Data</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>count</remote-alias>
              <ordinal>2</ordinal>
              <family>Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3408</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>temp_real_C</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temp_real_C]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>temp_real_C</remote-alias>
              <ordinal>3</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>69</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>temp_feels_like_ C</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temp_feels_like_ C]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>temp_feels_like_ C</remote-alias>
              <ordinal>4</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>79</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>humidity_percent</remote-name>
              <remote-type>5</remote-type>
              <local-name>[humidity_percent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>humidity_percent</remote-alias>
              <ordinal>5</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>153</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>wind_speed_kph</remote-name>
              <remote-type>5</remote-type>
              <local-name>[wind_speed_kph]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>wind_speed_kph</remote-alias>
              <ordinal>6</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>92</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weather</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weather]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weather</remote-alias>
              <ordinal>7</ordinal>
              <family>Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_holiday</remote-name>
              <remote-type>20</remote-type>
              <local-name>[is_holiday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_holiday</remote-alias>
              <ordinal>8</ordinal>
              <family>Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_weekend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[is_weekend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_weekend</remote-alias>
              <ordinal>9</ordinal>
              <family>Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>season</remote-name>
              <remote-type>129</remote-type>
              <local-name>[season]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>season</remote-alias>
              <ordinal>10</ordinal>
              <family>Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Data_921A8E3571EC4C5CBE12DBC79DD03794]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout common-percentage='0.796519' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.203481' show-structure='true' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_3016778490839232519:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Calculation_3016778490839232519:nk]' type='palette'>
            <map to='#11a333'>
              <bucket>true</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b97cf6'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[hr:time:ok]' type='palette'>
            <map to='#499894'>
              <bucket>8</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>20</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#79706e'>
              <bucket>12</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>9</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>5</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>18</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>21</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>16</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>6</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>13</bucket>
            </map>
            <map to='#d37295'>
              <bucket>14</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>17</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>19</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>7</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>22</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>15</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>11</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>23</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:weather:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Broken clouds&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rain with thunderstorm&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Rain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Snowfall&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cloudy&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Scattered clouds&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clear&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
          <calculation class='tableau' formula='&quot;week&quot;' />
        </column>
        <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Data' id='Data_921A8E3571EC4C5CBE12DBC79DD03794'>
            <properties context=''>
              <relation connection='excel-direct.13ukbqi18q2hoe18ey74q1kdbsce' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
                  <column datatype='integer' name='count' ordinal='2' />
                  <column datatype='real' name='temp_real_C' ordinal='3' />
                  <column datatype='real' name='temp_feels_like_ C' ordinal='4' />
                  <column datatype='real' name='humidity_percent' ordinal='5' />
                  <column datatype='real' name='wind_speed_kph' ordinal='6' />
                  <column datatype='string' name='weather' ordinal='7' />
                  <column datatype='integer' name='is_holiday' ordinal='8' />
                  <column datatype='integer' name='is_weekend' ordinal='9' />
                  <column datatype='string' name='season' ordinal='10' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table'>
                <columns>
                  <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <edit-group-action caption='Update Moving Average Period Set' name='[Action1_ADF02CCAF50640D683309AE3B7F52043]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Moving Average' />
      <add-or-remove-marks value='assign' />
      <params>
        <param name='selection-clear-set-option' value='do-nothing' />
        <param name='target-group' value='[federated.1ld4rh1098g4km19tf0s10k0r00w].[Moving Average Period Set]' />
      </params>
    </edit-group-action>
  </actions>
  <worksheets>
    <worksheet name='Heatmap'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f'>Temperatur vs Windspeed between </run>
            <run fontcolor='#59a14f' fontsize='10'><![CDATA[<[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836795397:qk]> and <[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Min Month (copy)_3016778490837069830:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.1ld4rh1098g4km19tf0s10k0r00w' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ld4rh1098g4km19tf0s10k0r00w'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_3016778490836135937]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_3016778490836795397]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF [Moving Average Period Set] THEN [Calculation_3016778490836135937] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_3016778490839232519]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_3016778490836135937] &gt;= [Calculation_3016778490836795397]&#10;AND&#10;[Calculation_3016778490836135937] &lt;= [Min Month (copy)_3016778490837069830]' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_3016778490837069830]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [Moving Average Period Set] THEN [Calculation_3016778490836135937] END) }' />
            </column>
            <column aggregation='None' caption='Wind (KPH)' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.57' />
            </column>
            <column caption='Count' datatype='integer' datatype-customized='true' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3016778490836795397]' derivation='None' name='[none:Calculation_3016778490836795397:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3016778490839232519]' derivation='None' name='[none:Calculation_3016778490839232519:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_3016778490837069830]' derivation='None' name='[none:Min Month (copy)_3016778490837069830:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wind Speed Kph (bin)]' derivation='None' name='[none:Wind Speed Kph (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[temp real C (bin)]' derivation='None' name='[none:temp real C (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='Temp C' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.49' />
            </column>
            <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' datatype-customized='true' name='[time]' role='dimension' type='ordinal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490839232519:nk]'>
            <groupfilter function='member' level='[none:Calculation_3016778490839232519:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490839232519:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:temp real C (bin):ok]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Wind Speed Kph (bin):ok]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ld4rh1098g4km19tf0s10k0r00w].[sum:count:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#ebd7db</color>
                <color>#e5bec7</color>
                <color>#dfa7b3</color>
                <color>#d990a0</color>
                <color>#d47a8d</color>
                <color>#ce667c</color>
                <color>#c8526b</color>
                <color>#c23f5b</color>
                <color>#bc2d4c</color>
                <color>#b71d3e</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dashed' />
            <format attr='fill-color' id='refline4' value='#d4d4d4' />
            <format attr='line-visibility' id='refline10' value='on' />
            <format attr='line-pattern-only' id='refline10' value='dashed' />
            <format attr='stroke-color' id='refline10' value='#59a14f' />
            <format attr='fill-color' id='refline10' value='#edffe5' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[sum:count:qk]' />
              <text column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[sum:count:qk]' />
              <lod column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836795397:qk]' />
              <lod column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Min Month (copy)_3016778490837069830:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#59a14f'><![CDATA[Temp C:	<[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:temp real C (bin):ok]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#59a14f'><![CDATA[Wind (KPH):	<[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Wind Speed Kph (bin):ok]>]]></run>
                <run><![CDATA[

<Sheet name="Weather" maxwidth="300" maxheight="200" filter="<All Fields>">

<Sheet name="Hour" maxwidth="300" maxheight="400" filter="<All Fields>">

]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.1ld4rh1098g4km19tf0s10k0r00w].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:temp real C (bin):ok]</rows>
        <cols>[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Wind Speed Kph (bin):ok]</cols>
        <show-full-range>
          <column>[federated.1ld4rh1098g4km19tf0s10k0r00w].[Wind Speed Kph (bin)]</column>
          <column>[federated.1ld4rh1098g4km19tf0s10k0r00w].[temp real C (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{FECA0970-C8E4-4D47-AEE7-79EBC08E150F}' />
    </worksheet>
    <worksheet name='Hour'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.1ld4rh1098g4km19tf0s10k0r00w' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ld4rh1098g4km19tf0s10k0r00w'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_3016778490836135937]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_3016778490836795397]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF [Moving Average Period Set] THEN [Calculation_3016778490836135937] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_3016778490839232519]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_3016778490836135937] &gt;= [Calculation_3016778490836795397]&#10;AND&#10;[Calculation_3016778490836135937] &lt;= [Min Month (copy)_3016778490837069830]' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_3016778490837069830]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [Moving Average Period Set] THEN [Calculation_3016778490836135937] END) }' />
            </column>
            <column aggregation='None' caption='Wind (KPH)' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.57' />
            </column>
            <column caption='Count' datatype='integer' datatype-customized='true' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3016778490836795397]' derivation='None' name='[none:Calculation_3016778490836795397:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3016778490839232519]' derivation='None' name='[none:Calculation_3016778490839232519:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_3016778490837069830]' derivation='None' name='[none:Min Month (copy)_3016778490837069830:qk]' pivot='key' type='quantitative' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='Temp C' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.49' />
            </column>
            <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' datatype-customized='true' name='[time]' role='dimension' type='ordinal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[Tooltip (Min Month,Max Month,Wind (KPH),Temp C)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Hour]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_3016778490836795397]' />
              <groupfilter function='level-members' level='[Min Month (copy)_3016778490837069830]' />
              <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
              <groupfilter function='level-members' level='[temp real C (bin)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[Tooltip (Moving Average Period,Min Month,Max Month)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Hour]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_3016778490836135937]' />
              <groupfilter function='level-members' level='[Calculation_3016778490836795397]' />
              <groupfilter function='level-members' level='[Min Month (copy)_3016778490837069830]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490839232519:nk]'>
            <groupfilter function='member' level='[none:Calculation_3016778490839232519:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490839232519:nk]</column>
            <column>[federated.1ld4rh1098g4km19tf0s10k0r00w].[Tooltip (Moving Average Period,Min Month,Max Month)]</column>
            <column>[federated.1ld4rh1098g4km19tf0s10k0r00w].[Tooltip (Min Month,Max Month,Wind (KPH),Temp C)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.1ld4rh1098g4km19tf0s10k0r00w].[sum:count:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dashed' />
            <format attr='fill-color' id='refline4' value='#d4d4d4' />
            <format attr='line-visibility' id='refline10' value='on' />
            <format attr='line-pattern-only' id='refline10' value='dashed' />
            <format attr='stroke-color' id='refline10' value='#59a14f' />
            <format attr='fill-color' id='refline10' value='#edffe5' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[hr:time:ok]' />
              <text column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[sum:count:qk]' />
              <lod column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Min Month (copy)_3016778490837069830:qk]' />
              <lod column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836795397:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.1ld4rh1098g4km19tf0s10k0r00w].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ld4rh1098g4km19tf0s10k0r00w].[hr:time:ok]</rows>
        <cols>[federated.1ld4rh1098g4km19tf0s10k0r00w].[sum:count:qk]</cols>
      </table>
      <simple-id uuid='{F3178AD9-515B-4D28-92CA-16E2FC81D14D}' />
    </worksheet>
    <worksheet name='Moving Average'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f'><![CDATA[<[Parameters].[Parameter 2]> <[Parameters].[Parameter 1]> moving average]]></run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.1ld4rh1098g4km19tf0s10k0r00w' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
            <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ld4rh1098g4km19tf0s10k0r00w'>
            <column caption='Moving Average Rides' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([count]), -[Parameters].[Parameter 2]+1, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_3016778490836135937]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_3016778490836795397]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF [Moving Average Period Set] THEN [Calculation_3016778490836135937] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_3016778490839232519]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_3016778490836135937] &gt;= [Calculation_3016778490836795397]&#10;AND&#10;[Calculation_3016778490836135937] &lt;= [Min Month (copy)_3016778490837069830]' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_3016778490837069830]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [Moving Average Period Set] THEN [Calculation_3016778490836135937] END) }' />
            </column>
            <column-instance column='[Calculation_3016778490839232519]' derivation='Attribute' name='[attr:Calculation_3016778490839232519:nk]' pivot='key' type='nominal' />
            <column caption='Count' datatype='integer' datatype-customized='true' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3016778490836135937]' derivation='None' name='[none:Calculation_3016778490836135937:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3016778490836795397]' derivation='None' name='[none:Calculation_3016778490836795397:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_3016778490837069830]' derivation='None' name='[none:Min Month (copy)_3016778490837069830:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' datatype-customized='true' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836135937:qk]' included-values='all' />
          <slices>
            <column>[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836135937:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ld4rh1098g4km19tf0s10k0r00w].[usr:Calculation1:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836135937:qk]' scope='cols' value='' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dashed' />
            <format attr='fill-color' id='refline4' value='#d4d4d4' />
            <format attr='line-visibility' id='refline10' value='on' />
            <format attr='line-pattern-only' id='refline10' value='dashed' />
            <format attr='stroke-color' id='refline10' value='#59a14f' />
            <format attr='fill-color' id='refline10' value='#edffe5' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='quick-filter'>
            <_.fcp.IndividualControlFormatting.true...format attr='border-style' field='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836135937:qk]' value='dotted' />
            <_.fcp.IndividualControlFormatting.true...format attr='border-color' field='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836135937:qk]' value='#59a14f' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[attr:Calculation_3016778490839232519:nk]' />
              <lod column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836795397:qk]' />
              <lod column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Min Month (copy)_3016778490837069830:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836135937:qk]' enable-instant-analytics='true' formula='min' id='refline10' label-type='none' paired-id='refline11' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836795397:qk]' z-order='3' />
            <reference-line axis-column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836135937:qk]' enable-instant-analytics='true' formula='max' id='refline11' label-type='none' paired-id='refline10' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Min Month (copy)_3016778490837069830:qk]' z-order='4' />
            <reference-line axis-column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836135937:qk]' enable-instant-analytics='false' formula='min' id='refline4' label-type='none' paired-id='refline5' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836795397:qk]' z-order='1' />
            <reference-line axis-column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836135937:qk]' enable-instant-analytics='false' formula='max' id='refline5' label-type='none' paired-id='refline4' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Min Month (copy)_3016778490837069830:qk]' z-order='2' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#59a14f'><![CDATA[Date:	<[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836135937:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#59a14f'><![CDATA[Moving Average Rides:	<[federated.1ld4rh1098g4km19tf0s10k0r00w].[usr:Calculation1:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Weather" maxwidth="300" maxheight="200" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Hour" maxwidth="300" maxheight="400" filter="<All Fields>">]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ld4rh1098g4km19tf0s10k0r00w].[usr:Calculation1:qk]</rows>
        <cols>[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836135937:qk]</cols>
      </table>
      <simple-id uuid='{18FC6A58-F75A-4EBE-89D6-66A42386C3B3}' />
    </worksheet>
    <worksheet name='Total Rides'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontsize='12'>London Bike Rides</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#59a14f' fontsize='10'><![CDATA[between <[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836795397:qk]>  and <[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Min Month (copy)_3016778490837069830:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.1ld4rh1098g4km19tf0s10k0r00w' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ld4rh1098g4km19tf0s10k0r00w'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_3016778490836135937]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_3016778490836795397]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF [Moving Average Period Set] THEN [Calculation_3016778490836135937] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_3016778490839232519]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_3016778490836135937] &gt;= [Calculation_3016778490836795397]&#10;AND&#10;[Calculation_3016778490836135937] &lt;= [Min Month (copy)_3016778490837069830]' />
            </column>
            <column caption='In Range Rides' datatype='integer' name='[Calculation_3016778490840244232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ SUM(INT([Calculation_3016778490839232519]) * [count]) }' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_3016778490837069830]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [Moving Average Period Set] THEN [Calculation_3016778490836135937] END) }' />
            </column>
            <column caption='Count' datatype='integer' datatype-customized='true' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3016778490836795397]' derivation='None' name='[none:Calculation_3016778490836795397:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3016778490839232519]' derivation='None' name='[none:Calculation_3016778490839232519:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_3016778490837069830]' derivation='None' name='[none:Min Month (copy)_3016778490837069830:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3016778490840244232]' derivation='Sum' name='[sum:Calculation_3016778490840244232:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' datatype-customized='true' name='[time]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490839232519:nk]'>
            <groupfilter function='member' level='[none:Calculation_3016778490839232519:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490839232519:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dashed' />
            <format attr='fill-color' id='refline4' value='#d4d4d4' />
            <format attr='line-visibility' id='refline10' value='on' />
            <format attr='line-pattern-only' id='refline10' value='dashed' />
            <format attr='stroke-color' id='refline10' value='#59a14f' />
            <format attr='fill-color' id='refline10' value='#edffe5' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[sum:Calculation_3016778490840244232:qk]' />
              <lod column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Min Month (copy)_3016778490837069830:qk]' />
              <lod column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836795397:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#59a14f' fontsize='36'>&lt;</run>
                <run bold='true' fontcolor='#59a14f' fontsize='36'>[federated.1ld4rh1098g4km19tf0s10k0r00w].[sum:Calculation_3016778490840244232:qk]</run>
                <run bold='true' fontcolor='#59a14f' fontsize='36'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BE819A8F-5399-4C5C-AF6B-52BDC3945DE1}' />
    </worksheet>
    <worksheet name='Weather'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.1ld4rh1098g4km19tf0s10k0r00w' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ld4rh1098g4km19tf0s10k0r00w'>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_3016778490836135937]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_3016778490836795397]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF [Moving Average Period Set] THEN [Calculation_3016778490836135937] END) }' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_3016778490839232519]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_3016778490836135937] &gt;= [Calculation_3016778490836795397]&#10;AND&#10;[Calculation_3016778490836135937] &lt;= [Min Month (copy)_3016778490837069830]' />
            </column>
            <column caption='Max Month' datatype='date' name='[Min Month (copy)_3016778490837069830]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [Moving Average Period Set] THEN [Calculation_3016778490836135937] END) }' />
            </column>
            <column aggregation='None' caption='Wind (KPH)' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.57' />
            </column>
            <column caption='Count' datatype='integer' datatype-customized='true' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3016778490836795397]' derivation='None' name='[none:Calculation_3016778490836795397:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3016778490839232519]' derivation='None' name='[none:Calculation_3016778490839232519:nk]' pivot='key' type='nominal' />
            <column-instance column='[Min Month (copy)_3016778490837069830]' derivation='None' name='[none:Min Month (copy)_3016778490837069830:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather]' derivation='None' name='[none:weather:nk]' pivot='key' type='nominal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' caption='Temp C' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.49' />
            </column>
            <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' datatype-customized='true' name='[time]' role='dimension' type='ordinal' />
            <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[Tooltip (Min Month,Max Month,Wind (KPH),Temp C)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_3016778490836795397]' />
              <groupfilter function='level-members' level='[Min Month (copy)_3016778490837069830]' />
              <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
              <groupfilter function='level-members' level='[temp real C (bin)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[Tooltip (Moving Average Period,Min Month,Max Month)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_3016778490836135937]' />
              <groupfilter function='level-members' level='[Calculation_3016778490836795397]' />
              <groupfilter function='level-members' level='[Min Month (copy)_3016778490837069830]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490839232519:nk]'>
            <groupfilter function='member' level='[none:Calculation_3016778490839232519:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:weather:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ld4rh1098g4km19tf0s10k0r00w].[sum:count:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490839232519:nk]</column>
            <column>[federated.1ld4rh1098g4km19tf0s10k0r00w].[Tooltip (Moving Average Period,Min Month,Max Month)]</column>
            <column>[federated.1ld4rh1098g4km19tf0s10k0r00w].[Tooltip (Min Month,Max Month,Wind (KPH),Temp C)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.1ld4rh1098g4km19tf0s10k0r00w].[sum:count:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dashed' />
            <format attr='fill-color' id='refline4' value='#d4d4d4' />
            <format attr='line-visibility' id='refline10' value='on' />
            <format attr='line-pattern-only' id='refline10' value='dashed' />
            <format attr='stroke-color' id='refline10' value='#59a14f' />
            <format attr='fill-color' id='refline10' value='#edffe5' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:weather:nk]' />
              <text column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[sum:count:qk]' />
              <lod column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836795397:qk]' />
              <lod column='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Min Month (copy)_3016778490837069830:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.1ld4rh1098g4km19tf0s10k0r00w].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:weather:nk]</rows>
        <cols>[federated.1ld4rh1098g4km19tf0s10k0r00w].[sum:count:qk]</cols>
      </table>
      <simple-id uuid='{8C534A76-FE0C-4805-A6D2-DB2BC8B2B607}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <_.fcp.IndividualControlFormatting.true...style-rule element='parameter-ctrl'>
          <_.fcp.IndividualControlFormatting.true...format attr='color' field='[Parameters].[Parameter 2]' value='#59a14f' />
          <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[Parameters].[Parameter 2]' value='bold' />
          <_.fcp.IndividualControlFormatting.true...format attr='color' field='[Parameters].[Parameter 1]' value='#59a14f' />
          <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[Parameters].[Parameter 1]' value='bold' />
          <_.fcp.IndividualControlFormatting.true...format attr='border-style' field='[Parameters].[Parameter 2]' value='dotted' />
          <_.fcp.IndividualControlFormatting.true...format attr='border-color' field='[Parameters].[Parameter 2]' value='#59a14f' />
          <_.fcp.IndividualControlFormatting.true...format attr='border-style' field='[Parameters].[Parameter 1]' value='dotted' />
          <_.fcp.IndividualControlFormatting.true...format attr='border-color' field='[Parameters].[Parameter 1]' value='#59a14f' />
        </_.fcp.IndividualControlFormatting.true...style-rule>
        <_.fcp.IndividualControlFormatting.true...style-rule element='parameter-ctrl-title'>
          <_.fcp.IndividualControlFormatting.true...format attr='color' field='[Parameters].[Parameter 2]' value='#59a14f' />
          <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[Parameters].[Parameter 2]' value='bold' />
          <_.fcp.IndividualControlFormatting.true...format attr='color' field='[Parameters].[Parameter 1]' value='#59a14f' />
          <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[Parameters].[Parameter 1]' value='bold' />
        </_.fcp.IndividualControlFormatting.true...style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Data (london_bikes_final)' name='federated.1ld4rh1098g4km19tf0s10k0r00w' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
          <calculation class='tableau' formula='&quot;week&quot;' />
          <members>
            <member value='&quot;day&quot;' />
            <member value='&quot;week&quot;' />
            <member value='&quot;month&quot;' />
          </members>
        </column>
        <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ld4rh1098g4km19tf0s10k0r00w'>
        <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_3016778490836135937]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
        </column>
        <column-instance column='[Calculation_3016778490836135937]' derivation='None' name='[none:Calculation_3016778490836135937:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='16' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='14' type-v2='layout-basic' w='98828' x='586' y='1042'>
              <zone h='45182' id='8' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='45182' id='6' type-v2='layout-basic' w='98828' x='586' y='1042'>
                  <zone h='45182' id='3' name='Total Rides' w='19618' x='586' y='1042'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='padding' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45182' id='5' name='Moving Average' w='79210' x='20204' y='1042'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='52734' id='12' name='Heatmap' w='98828' x='586' y='46224'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='padding' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8203' id='10' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='14129' x='58053' y='260' />
        <zone h='8333' id='11' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='12884' x='72767' y='260' />
        <zone h='5599' id='13' type-v2='text' w='13104' x='44729' y='1042'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#59a14f'>Drag and Hold to select </run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#59a14f'>time period on timeline</run>
          </formatted-text>
        </zone>
        <zone h='8333' id='17' name='Moving Average' param='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836135937:qk]' type-v2='filter' values='database' w='13177' x='86164' y='130' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='18' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='8203' id='10' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='14129' x='58053' y='260'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8333' id='11' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='12884' x='72767' y='260'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45182' id='3' is-fixed='true' name='Total Rides' w='19618' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8333' id='17' name='Moving Average' param='[federated.1ld4rh1098g4km19tf0s10k0r00w].[none:Calculation_3016778490836135937:qk]' type-v2='filter' values='database' w='13177' x='86164' y='130'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45182' id='5' is-fixed='true' name='Moving Average' w='79210' x='20204' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5599' id='13' type-v2='text' w='13104' x='44729' y='1042'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#59a14f'>Drag and Hold to select </run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#59a14f'>time period on timeline</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52734' id='12' is-fixed='true' name='Heatmap' w='98828' x='586' y='46224'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{34C5C407-5A81-452C-A8CC-1D9B98F96A22}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Moving Average'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='1' param='[federated.1ld4rh1098g4km19tf0s10k0r00w].[attr:Calculation_3016778490839232519:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{928F44B4-ADBD-4966-9B48-D13A9FBFB45F}' />
    </window>
    <window class='worksheet' name='Total Rides'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3C738F59-B997-44B5-93C1-76C3E2DA7C4F}' />
    </window>
    <window class='worksheet' name='Heatmap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{36D633AE-CF79-494E-A0C6-368CB132D4B6}' />
    </window>
    <window class='worksheet' name='Weather'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{34C35B77-2136-4052-A447-7DCCB9ACA90F}' />
    </window>
    <window class='worksheet' name='Hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{0DA9E8D0-C187-468F-90A9-DE5D81F01474}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Heatmap'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Moving Average'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Rides'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{66CEE6B0-B884-465F-B0AA-5691C088204E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      lEgAgiAIvZToBSQIFzjRC+jHiV5AnRN3AIIgCL2USABCt/H5fOzYsYPdCymp2wAAIABJREFU
      u3cjSRLl5eUA1NXVYTKZeja4/2GiF1DnRC+gHycSgNBtDh48SHJyMpGRkRQXF1NRUYHT6SQn
      J0esCSwI5yGRAIRu09LSQp8+fUhISKCxsRG73c7ChQuZOnVqT4cmCMIpiAQgdBuVSoXT6cRm
      s6HT6dDpdEyfPp0DBw70dGiCIJyC6AUkdJvW1la2bt2K1+tlxowZ7N27lylTprBt2zZSUlLo
      06dPT4f4P0n0AvpxohdQ50QCELqV2+1GJpOhVIo/uHNFJIAfJxJA50QTkNCtVCqV+PI/x0Qv
      oM6JXkA/TtwBCIIg9FLiDkAQBKGXEglAEAShlxIJQBAEoZcSCUAQBKGXEglAuKD4fL5Tvi5J
      EpIkdfi5s7Kn4vF4sNvtZ1TnmWz/dGM4k22eq7i64sdi+Dn224nH/qf88Fw50c+x79xuNx6P
      57TK+ny+cxqb4umnn36227cqCKdh+fLlNDU1UVhYSHJyMnJ559cjbreb7777juLiYlJTUzv8
      rra2lq+//prg4GDCwsIA2LBhA/X19SQmJnYou27dOurq6mhubu4wMK21tZXq6mqio6P9r5lM
      Jr799luMRiNxcXEdtlNUVMTKlSsZPHgwSqWS5cuX09zcjNvtJiIiokv7Y82aNTgcDmJjY3+0
      3LmO67jvv/+e5OTknyyXm5vL+vXrGTZsWIfXf3gMt2zZQmVlJXV1dcTHx3cpJrPZzMqVK4mO
      jiYoKOgny5eXl7Np0yZCQ0MJCQnxv+71esnJyWH79u1kZGTQ0tLCpk2baGhoICAggMDAwC7F
      V1BQQGFhISUlJahUqg5zYlVVVQGg1WoBOHToEJs3byYuLs7/GoDD4WDHjh0UFBSQlpZGRUUF
      W7dupampifDwcDQaTZdi27lzJ6LDttBjwsPDmTx5Ms3NzeTn5+PxeGhqaiIyMpK0tDR27txJ
      REQE48aNQ6lUcvHFF7Nly5aTthMbG8uYMWP8P5eWlpKQkEBzc/NJZdVqNRMnTgTgyJEjFBUV
      odFoGDlyJLm5uRQWFjJ27Fji4uIIDg7moosuIj8//6TtpKamYjAY/D/7fD7S09PR6/Vd2hdO
      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
      z39bWxvvvPsuFZWVTJo0id179rBv/35aWluJjY3l3c2bKS0tZXJSEj5uRFh8a0BXAI2NjWRm
      ZnLp0iVaWlq49dZbGTduHPX19f3H2Gw2srKyyMvLc7sogWC4qK6u5v333yf/1Kn+rzU1NpKT
      k8P9q1ez5YMPsFgsbP3kE47k5KDX68k5doyMjAyW3H77NV/m90N8vHUru3btQndFpMvs2bO5
      d9UqGpuaqK2tvep8xGIx969eTVhYGPv27fNi5X0D8KRJSTz605+xfceXdOr6coUcDgeffPoJ
      OUdzqKquZueuXSxdcjvvbn6X8YmJ3LdqFRarhZ4e7+9G9l3P/7bPPydl5kyMRiNHjx4lLy+P
      e+6+m4UZGWzfvp3YmBjEYjHZBw969NgDGgDmzp2LTqejoaGBiRMnEhMTQ15eHitXruw/Zteu
      XSxfvnzw954VCK5DEydOZO3atVctfY6OjsZoMvHzX/yCiRMnUlRUREREBIkJCTicTtrb23nz
      T38iOzu7P03Xm554/HGSk5Ov+lpYWBg2mw0/pZJbMzOvOp+wsDA+3rqVHTt2kJGe7p2iL/Px
      8cFgMPDkz59i0g2T+pexniooIDw8gnEJ42hvbyc+Po7pydMRXd7/OCAggHZtOwsWuJ+jM1i+
      6/lPTU3lzbfe4ujRo4wePRqtVsvvXn6ZgsJC5AoF54qL6ezspK6uzqPHHtAAUF5ezp49e3jl
      lVdQKBRcunQJ6Mv/gb7pmL1797Jv3z4qKiqoqanxqDiBYDiqr68nNCSEjz76iOrqat7ZvJnj
      J05wJCeHY8eO8e6mTWz96CNOFRbSfLl7+Hq0NyuLpUuW0NTU9PfzqanB4XTyzDPPsHLlSg4d
      OuTtMklLTeX/bXibGlUNbW1tOJ1Otn7yCSdOnuDI0Rxy8/IwGk309vbidDrx9fXlSE4Os9PS
      CLpO42pyc3N56Xe/Y8WKFahqa/ns009547XX2Lt3L3csXcqCBQuw2WwEedhvMqDJx4MHD2Kx
      WNiwYQP33nsvBw8e7P/0X1RUhFarZdu2bQD89re/Zfz48R4VJxBc70pKS3n77bepb2hg9OjR
      qNVqbl60iNbWVl599VX8/P15c/16fHx8WLduHbPT0nj2uefo7OxELpcT7uXGN6vVyrubN3Po
      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
      DOb2+//FA4kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Moving Average' width='384'>
      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
      bN++ndbWVmpqahgcHCQSiVBWVhbjkkUk0SkF5A6KgYpIzP3g2nfYu/ExfF6NAuJJf/siEnOW
      7cM3nYHP1iUonjQCEBFJUdoKQkQkRakBiIikKDUAEZEUpQYgIpKi5rUBGGM4c+YMR44coaOj
      Y05f393dzbVr1277nG3bnDt3jpGRkZmvbWpqoq2tbd7qnZqa4tVXX+W1115jcHDwlu99+fLl
      275+YmKC06dPz/o8Ojs7aWxsBKC/v59Dhw5x7NgxwuHwvNV7L2NjY7zxxhtz+tpAIDDr1xpj
      aG9vp7m5GYDe3l4OHz7MiRMnmJ6entd656Knp4dQ6N55cdu2uXLlCn19fbd9LhgM8vrrrxON
      RgmFQhw9epSjR4/e8prHwtTUFCdPniQSmdseOFNTU7z++uuz/gwNDAxw6dIljDGMjY1x5MgR
      jhw5wsTExHyXfVfGGN544w0OHTrE0NDQLZ+LRCJMTk7e8rWXLl1iYGDgtseZmpri1KlTM5tO
      Hj9+nCNHjtDe3r6wT+AdRkZGOHToECdOnJjT7240Gr3j78bY2BhnzpzBGMP09DSvvvoqR44c
      YXh4eCFKvyNjDFevXuXo0aPU19ff8rl5z2CNjo7y2GOPcezYMbxeLxkZGZw/f566ujry8/M5
      e/YsmZmZrFu3jnA4TH9/P6Ojo6xevfqWx+nq6mJiYoJAIEBBQQHBYJAbN26Qk5NDVVXVvNQa
      DofJyclh27ZtGGO4du0aQ0NDbNu2jc7OTgYGBlixYgXl5eXYtk1ra+usL14oFKK/v59gMMjK
      lStpbW1l69at5OTkzEudc3Xt2jX6+/tntuy4fPky0WiUhx56iKGhISYmJigqKiI3N5f29vZZ
      n8vk5CT9/f1Eo1GWLVtGW1sbW7duJTs7O6bP5aaenh58Ph8TExPk5+czMjJCeno6LS0tBINB
      Nm/ejN/vp7+/n8nJSYwxlJaWzvz3tm3T3t7O0NAQtm0zPj5OQUEBGzZsiPlzaW5uZmhoiEAg
      QGZmJqFQiJycHEZGRsjJyeHcuXP4/X42btyIz+ejra2N0dFRIpEIfr9/5nEikQi9vb309fWx
      bt06Ojo6WLNmzS3PO1YuXLjAokWL2Lx5M6+88gqPP/44LS0tDA8P4/V6aW5uZuvWrVRXV9Pb
      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
      3QzVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='140' name='Total Rides' width='384'>
      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
      ImKp/wdEsdmIjexkKwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
